In openpyxl, you can use data validation to enforce certain rules or criteria for the data entered into cells. Here are the types of data validation you can apply and a brief guide on how to use them:

# Types of Data Validation
List: Restrict data entry to a list of values.
Whole Number: Restrict data entry to whole numbers within a specified range.
Decimal: Restrict data entry to decimal numbers within a range.
Date: Restrict data entry to dates within a range.
Time: Restrict data entry to times within a range.
Text Length: Restrict data entry to text of a certain length.
Custom: Use a formula to determine valid data entries.

# CSV Structure Like This:
sheet: Where to apply the validation.
sheet_is_optional: Indicates if the sheet's creation is optional.
column_name: The name of the column in Excel where validation applies.
val_type: The type of data validation (e.g., list, whole, decimal).
val_operator: Operator for validation, if applicable (e.g., between, equal).
val_formula1: The first criterion for the validation (start of range, list items, etc.).
val_formula2: The second criterion for the validation, if necessary.
val_range: Specific range within the column to apply validation, if desired.

column_name
Description: The name or reference of the column in Excel where validation will be applied.
Examples: 'A', 'B', 'C', etc. You would typically specify the column letter(s).
val_type
The type of data validation. It defines the nature of the data that can be entered in the cell(s).

Options:
'list': A list of allowed values.
'whole': Only whole numbers are permitted.
'decimal': Only decimal numbers are permitted.
'date': Only date values are allowed.
'time': Only time values are permitted.
'textLength': The text length is restricted to a certain range or condition.
'custom': A custom formula determines valid data.
val_operator
Specifies the operator for the validation, mainly used with numeric, date, and text length validations.

Options:
'between': The value must be between val_formula1 and val_formula2.
'notBetween': The value must not be between val_formula1 and val_formula2.
'equal': The value must be equal to val_formula1.
'notEqual': The value must not be equal to val_formula1.
'greaterThan': The value must be greater than val_formula1.
'lessThan': The value must be less than val_formula1.
'greaterThanOrEqual': The value must be greater than or equal to val_formula1.
'lessThanOrEqual': The value must be less than or equal to val_formula1.
val_formula1
The first criterion for the validation. It varies based on the type of validation.

Usage:
For a list, this would be the list items (e.g., "\"Item1,Item2,Item3\"").
For numeric ranges, the start of the range.
For custom formulas, the actual formula (e.g., '=SUM(A1:A10)<100').
val_formula2
The second criterion for the validation, used with operators that require a range.

Usage:
For numeric ranges, the end of the range.
Not used for lists or custom formulas.
val_range
Specifies the actual cells or range within the column to apply validation.

# Encoding Validation Rules
1. List (list)
val_type: "list"
val_details: A comma-separated list of values.
Example: "Option1,Option2,Option3"
2. Whole Number (whole)
val_type: "whole"
val_details: The operator and the values, separated by commas.
Example: "between,1,100" for a value between 1 and 100.
3. Decimal (decimal)
val_type: "decimal"
val_details: Same format as whole number.
Example: "notBetween,0.1,9.9" for a value not between 0.1 and 9.9.
4. Date (date)
val_type: "date"
val_details: The operator and the dates, in a standard format, separated by commas.
Example: "between,2020-01-01,2024-12-31" for a date between Jan 1, 2020, and Dec 31, 2024.
5. Time (time)
val_type: "time"
val_details: Similar to date.
Example: "greaterThan,06:00" for a time greater than 6:00 AM.
6. Text Length (textLength)
val_type: "textLength"
val_details: The operator and a number, separated by commas.
Example: "lessThan,10" for text less than 10 characters long.
7. Custom (custom)
val_type: "custom"
val_details: A formula.
Example: "=LEN(A1)>3" for text where the length is greater than 3 characters.

#